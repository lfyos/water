[
	
],

function (	method_id,				parameter_channel_id,	render_id,		part_id,			render_buffer_id,
			component_data_array,	project_matrix,			view_port,		do_render_number,	render)
{
	var gl								=render.gl;
	var shader_object					=render.render_program.render_program[render_id];
	var shader_program					=shader_object.shader_program;
	var shader_data						=shader_object.shader_data;
	var part_buffer_object				=render.buffer_object.buffer_object[render_id][part_id];
	
	var component_location				=render.component_location_data;
	
	var data_buffer						=render.data_buffer[render_id][part_id];
	var pickup							=render.pickup;

	var permanent_render_id				=render.permanent_render_part_id[render_id][part_id].permanent_render_id;
	var permanent_part_id				=render.permanent_render_part_id[render_id][part_id].permanent_part_id;
	
	var part_information				=render.part_information[render_id][part_id].information;
	var part_material					=render.part_information[render_id][part_id].material;
	var part_property					=render.part_information[render_id][part_id].property;
	var part_component_id_and_driver_id	=render.part_information[render_id][part_id].part_component_id_and_driver_id;
	var component_initialize_data		=render.part_information[render_id][part_id].component_initialize_data;
	var part_initialize_data			=render.part_information[render_id][part_id].part_initialize_data;
	var render_initialize_data			=render.part_information[render_id][part_id].render_initialize_data;
	
	var clip_plane						=render.clip_plane_array[render_buffer_id];
	var clip_plane_matrix				=render.clip_plane_matrix_array[render_buffer_id];
	
	var camera_object_parameter			=render.camera.camera_object_parameter;
	var camera_render_parameter			=render.camera.camera_render_parameter[render_buffer_id];
	var camera_id						=camera_render_parameter.camera_id;
	var camera_component_id				=camera_object_parameter[camera_id].component_id;
	
	var utility							=render.utility;
	var computer						=render.computer;
	var current_time					=render.current_time;
	var modifier_current_time			=render.modifier_current_time;

	function pickup_driver_after_target_render(
		target_id,render_target_id,width,height,render_target_number,render)
	{
		var gl=render.gl;
		var start_time=(new Date()).getTime();
		var tp=render.target_processor[target_id];
		
		if(typeof(tp.frame)=="undefined"){
			tp.frame=gl.createFramebuffer();
		    gl.bindFramebuffer(gl.FRAMEBUFFER,tp.frame);
			tp.texture=gl.createTexture();
			gl.activeTexture(gl.TEXTURE0);
			gl.bindTexture(gl.TEXTURE_2D,tp.texture);
			gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_BASE_LEVEL,0);
	   		gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAX_LEVEL, 0);
			gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,8,1,0,gl.RGBA,gl.UNSIGNED_BYTE,null);
			gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,tp.texture,0);
		    gl.drawBuffers([gl.COLOR_ATTACHMENT0]);
		    
		    gl.bindFramebuffer(gl.FRAMEBUFFER,render.target[render_target_id].frame);
		};

		if(!(render.event_listener.mouse_inside_canvas_flag)){
			render.pickup.component_id	=-1;
			render.pickup.body_id		=-1;
			render.pickup.face_id		=-1;
			render.pickup.vertex_id		=-1;
			render.pickup.loop_id		=-1;
			render.pickup.edge_id		=-1;
			render.pickup.point_id		=-1;
			render.pickup.depth			=-1;
			render.pickup.value			=-1;
		}else{
			gl.activeTexture(gl.TEXTURE0);
			gl.bindTexture(gl.TEXTURE_2D,tp.texture);
			
			for(var i=0;i<4;i++){
				gl.readBuffer(gl.COLOR_ATTACHMENT0+i);
				gl.copyTexSubImage2D(gl.TEXTURE_2D,0,i+0,0,0,0,1,1);
				gl.copyTexSubImage2D(gl.TEXTURE_2D,0,i+4,0,1,0,1,1);
			}
			gl.bindTexture(gl.TEXTURE_2D,null);
				
			var pixels=new Uint8Array(32);
						
			gl.bindFramebuffer(gl.FRAMEBUFFER,tp.frame);
			gl.readBuffer(gl.COLOR_ATTACHMENT0);
			gl.readPixels(0,0,8,1,gl.RGBA,gl.UNSIGNED_BYTE,pixels);
			
			render.pickup.component_id	=render.utility.decode_integer_from_pixel(pixels[ 0],pixels[ 1],pixels[ 2],pixels[ 3]);
				
			render.pickup.body_id		=render.utility.decode_integer_from_pixel(pixels[ 4],pixels[ 5],pixels[ 6],pixels[ 7]);
			render.pickup.face_id		=render.utility.decode_integer_from_pixel(pixels[ 8],pixels[ 9],pixels[10],pixels[11]);
			render.pickup.vertex_id		=render.utility.decode_integer_from_pixel(pixels[12],pixels[13],pixels[14],pixels[15]);
			render.pickup.loop_id		=render.utility.decode_integer_from_pixel(pixels[16],pixels[17],pixels[18],pixels[19]);
			render.pickup.edge_id		=render.utility.decode_integer_from_pixel(pixels[20],pixels[21],pixels[22],pixels[23]);
			render.pickup.point_id		=render.pickup.vertex_id;
			render.pickup.depth			=render.utility.decode_float_from_pixel(pixels[24],pixels[25],pixels[26],pixels[27]);
			render.pickup.value			=render.utility.decode_float_from_pixel(pixels[28],pixels[29],pixels[30],pixels[31]);
		}
		
		if(render.pickup.loop_id>=0)
			render.pickup.vertex_id=-1;
		else{
			render.pickup.loop_id=-1;
			render.pickup.edge_id=-1;
			render.pickup.point_id=-1;
		}
		render.pickup.render_id	=-1;
		render.pickup.part_id	=-1;
		render.pickup.buffer_id	=-1;
		
		if(render.pickup.component_id>=0){
			var p=render.component_render_id_and_part_id;
			if(render.pickup.component_id<p.length)
				if(typeof(p=p[render.pickup.component_id])!="undefined")
					if(p.length>0){
						render.pickup.render_id	=p[0][0];
						render.pickup.part_id	=p[0][1];
						render.pickup.buffer_id	=p[0][2];
					}
		}
		render.pickup.pickup_time=(new Date()).getTime();
		render.pickup.read_time_length=render.pickup.pickup_time-start_time;

		var ep;
		
		if(render.pickup.compare(tp.pickup)){
			tp.pickup=render.pickup.fork();
			return;
		}
		if((render.pickup.pickup_time-tp.pickup.pickup_time)<part_initialize_data)
			return;
		var old_pickup=tp.last_pickup;
		tp.last_pickup=render.pickup.fork();
		
		if(render.pickup.component_id!=old_pickup.component_id){
			do{
				if(old_pickup.component_id<0)
					break;
				if(typeof(ep=render.component_event_processor[old_pickup.component_id])!="object")
					break;
				if(typeof(ep.pickupleave_component)=="function")
					ep.pickupleave_component(render.pickup,old_pickup,render);
				if(old_pickup.body_id<0)
					break;
				if(typeof(ep.pickupleave_body)=="function")
					ep.pickupleave_body(render.pickup,old_pickup,render);
				if(old_pickup.face_id<0)
					break;
				if(typeof(ep.pickupleave_face)=="function")
					ep.pickupleave_face(render.pickup,old_pickup,render);
				if(old_pickup.loop_id<0)
					break;
				if(typeof(ep.pickupleave_loop)=="function")
					ep.pickupleave_loop(render.pickup,old_pickup,render);
				if(old_pickup.edge_id<0)
					break;
				if(typeof(ep.pickupleave_edge)=="function")
					ep.pickupleave_edge(render.pickup,old_pickup,render);
				if(old_pickup.point_id<0)
					break;
				if(typeof(ep.pickupleave_point)=="function")
					ep.pickupleave_point(render.pickup,old_pickup,render);
			}while(false);
			
			do{
				if(render.pickup.component_id<0)
					break;
				if(typeof(ep=render.component_event_processor[render.pickup.component_id])!="object")
					break;
				if(typeof(ep.pickupenter_component)=="function")
					ep.pickupenter_component(render.pickup,old_pickup,render);
				if(render.pickup.body_id<0)
					break;
				if(typeof(ep.pickupenter_body)=="function")
					ep.pickupenter_body(render.pickup,old_pickup,render);
				if(render.pickup.face_id<0)
					break;
				if(typeof(ep.pickupenter_face)=="function")
					ep.pickupenter_face(render.pickup,old_pickup,render);
				if(render.pickup.loop_id<0)
					break;
				if(typeof(ep.pickupenter_loop)=="function")
					ep.pickupenter_loop(render.pickup,old_pickup,render);
				if(render.pickup.edge_id<0)
					break;
				if(typeof(ep.pickupenter_edge)=="function")
					ep.pickupenter_edge(render.pickup,old_pickup,render);
				if(render.pickup.point_id<0)
					break;
				if(typeof(ep.pickupenter_point)=="function")
					ep.pickupenter_point(render.pickup,old_pickup,render);
			}while(false);
		}else if(render.pickup.body_id!=old_pickup.body_id){
			do{
				if((old_pickup.component_id<0)||(old_pickup.body_id<0))
					break;
				if(typeof(ep=render.component_event_processor[old_pickup.component_id])!="object")
					break;
				if(typeof(ep.pickupleave_body)=="function")
					ep.pickupleave_body(render.pickup,old_pickup,render);
				if(old_pickup.face_id<0)
					break;
				if(typeof(ep.pickupleave_face)=="function")
					ep.pickupleave_face(render.pickup,old_pickup,render);
				if(old_pickup.loop_id<0)
					break;
				if(typeof(ep.pickupleave_loop)=="function")
					ep.pickupleave_loop(render.pickup,old_pickup,render);
				if(old_pickup.edge_id<0)
					break;
				if(typeof(ep.pickupleave_edge)=="function")
					ep.pickupleave_edge(render.pickup,old_pickup,render);
				if(old_pickup.point_id<0)
					break;
				if(typeof(ep.pickupleave_point)=="function")
					ep.pickupleave_point(render.pickup,old_pickup,render);
			}while(false);
			
			do{
				if((render.pickup.component_id<0)||(render.pickup.body_id<0))
					break;
				if(typeof(ep=render.component_event_processor[render.pickup.component_id])!="object")
					break;
				if(typeof(ep.pickupenter_body)=="function")
					ep.pickupenter_body(render.pickup,old_pickup,render);
				if(render.pickup.face_id<0)
					break;
				if(typeof(ep.pickupenter_face)=="function")
					ep.pickupenter_face(render.pickup,old_pickup,render);
				if(render.pickup.loop_id<0)
					break;
				if(typeof(ep.pickupenter_loop)=="function")
					ep.pickupenter_loop(render.pickup,old_pickup,render);
				if(render.pickup.edge_id<0)
					break;
				if(typeof(ep.pickupenter_edge)=="function")
					ep.pickupenter_edge(render.pickup,old_pickup,render);
				if(render.pickup.point_id<0)
					break;
				if(typeof(ep.pickupenter_point)=="function")
					ep.pickupenter_point(render.pickup,old_pickup,render);
			}while(false);
		}else if(render.pickup.face_id!=old_pickup.face_id){
			do{
				if((old_pickup.component_id<0)||(old_pickup.body_id<0)||(old_pickup.face_id<0))
					break;
				if(typeof(ep=render.component_event_processor[old_pickup.component_id])!="object")
					break;
				if(typeof(ep.pickupleave_face)=="function")
					ep.pickupleave_face(render.pickup,old_pickup,render);
				if(old_pickup.loop_id<0)
					break;
				if(typeof(ep.pickupleave_loop)=="function")
					ep.pickupleave_loop(render.pickup,old_pickup,render);
				if(old_pickup.edge_id<0)
					break;
				if(typeof(ep.pickupleave_edge)=="function")
					ep.pickupleave_edge(render.pickup,old_pickup,render);
				if(old_pickup.point_id<0)
					break;
				if(typeof(ep.pickupleave_point)=="function")
					ep.pickupleave_point(render.pickup,old_pickup,render);
			}while(false);
			do{
				if((render.pickup.component_id<0)||(render.pickup.body_id<0)||(render.pickup.face_id<0))
					break;
				if(typeof(ep=render.component_event_processor[render.pickup.component_id])!="object")
					break;
				if(typeof(ep.pickupenter_face)=="function")
					ep.pickupenter_face(render.pickup,old_pickup,render);
				if(render.pickup.loop_id<0)
					break;
				if(typeof(ep.pickupenter_loop)=="function")
					ep.pickupenter_loop(render.pickup,old_pickup,render);
				if(render.pickup.edge_id<0)
					break;
				if(typeof(ep.pickupenter_edge)=="function")
					ep.pickupenter_edge(render.pickup,old_pickup,render);
				if(render.pickup.point_id<0)
					break;
				if(typeof(ep.pickupenter_point)=="function")
					ep.pickupenter_point(render.pickup,old_pickup,render);
			}while(false);
		}else if(render.pickup.loop_id!=old_pickup.loop_id){
			do{
				if((old_pickup.component_id<0)||(old_pickup.body_id<0)||(old_pickup.face_id<0)||(old_pickup.loop_id<0))
					break;
				if(typeof(ep=render.component_event_processor[old_pickup.component_id])!="object")
					break;
				if(typeof(ep.pickupleave_loop)=="function")
					ep.pickupleave_loop(render.pickup,old_pickup,render);
				if(old_pickup.edge_id<0)
					break;
				if(typeof(ep.pickupleave_edge)=="function")
					ep.pickupleave_edge(render.pickup,old_pickup,render);
				if(old_pickup.point_id<0)
					break;
				if(typeof(ep.pickupleave_point)=="function")
					ep.pickupleave_point(render.pickup,old_pickup,render);
			}while(false);
			
			do{
				if((render.pickup.component_id<0)||(render.pickup.body_id<0)||(render.pickup.face_id<0)||(render.pickup.loop_id<0))
					break;
				if(typeof(ep=render.component_event_processor[render.pickup.component_id])!="object")
					break;
				if(typeof(ep.pickupenter_loop)=="function")
					ep.pickupenter_loop(render.pickup,old_pickup,render);
				if(render.pickup.edge_id<0)
					break;
				if(typeof(ep.pickupenter_edge)=="function")
					ep.pickupenter_edge(render.pickup,old_pickup,render);
				if(render.pickup.point_id<0)
					break;
				if(typeof(ep.pickupenter_point)=="function")
					ep.pickupenter_point(render.pickup,old_pickup,render);
			}while(false);
		}else if(render.pickup.edge_id!=old_pickup.edge_id){
			do{
				if((old_pickup.component_id<0)||(old_pickup.body_id<0)
					||(old_pickup.face_id<0)||(old_pickup.loop_id<0)||(old_pickup.edge_id<0))
						break;
				if(typeof(ep=render.component_event_processor[old_pickup.component_id])!="object")
					break;
				if(typeof(ep.pickupleave_edge)=="function")
					ep.pickupleave_edge(render.pickup,old_pickup,render);
				if(old_pickup.point_id<0)
					break;
				if(typeof(ep.pickupleave_point)=="function")
					ep.pickupleave_point(render.pickup,old_pickup,render);
			}while(false);
			
			do{
				if((render.pickup.component_id<0)||(render.pickup.body_id<0)
					||(render.pickup.face_id<0)||(render.pickup.loop_id<0)||(render.pickup.edge_id<0))
						break;
				if(typeof(ep=render.component_event_processor[render.pickup.component_id])!="object")
					break;
				if(typeof(ep.pickupenter_edge)=="function")
					ep.pickupenter_edge(render.pickup,old_pickup,render);
				if(render.pickup.point_id<0)
					break;
				if(typeof(ep.pickupenter_point)=="function")
					ep.pickupenter_point(render.pickup,old_pickup,render);
			}while(false);
		}else if(render.pickup.point_id!=old_pickup.point_id){
			do{
				if((old_pickup.component_id<0)||(old_pickup.body_id<0)||(old_pickup.face_id<0)
					||(old_pickup.loop_id<0)||(old_pickup.edge_id<0)||(old_pickup.point_id<0))
						break;
				if(typeof(ep=render.component_event_processor[old_pickup.component_id])!="object")
					break;
				if(typeof(ep.pickupleave_point)=="function")
					ep.pickupleave_point(render.pickup,old_pickup,render);
			}while(false);
			
			do{
				if((render.pickup.component_id<0)||(render.pickup.body_id<0)||(render.pickup.face_id<0)
					||(render.pickup.loop_id<0)||(render.pickup.edge_id<0))
						break;
				if(typeof(ep=render.component_event_processor[render.pickup.component_id])!="object")
					break;
				if(typeof(ep.pickupenter_point)=="function")
					ep.pickupenter_point(render.pickup,old_pickup,render);
			}while(false);
		}
	}
	
	for(var i=0,n=component_data_array.length;i<n;i++){
		var buffer_id=component_data_array[i];
		while(data_buffer[buffer_id].length>1)
			data_buffer[buffer_id].shift();
		var target_id=data_buffer[buffer_id][0];
		if(typeof(render.target_processor[target_id])=="undefined")
			render.target_processor[target_id]=
			{
				pickup				:	render.pickup.fork(),
				last_pickup			:	render.pickup.fork(),
				after_target_render	:	pickup_driver_after_target_render,
				destroy				:	function(gl,tp,target_id)
				{
					tp.pickup=null;
					tp.last_pickup=null;
					tp.after_target_render=null;
				}
			}
	}
}

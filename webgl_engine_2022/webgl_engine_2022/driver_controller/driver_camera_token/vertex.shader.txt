uniform sampler2D	texture_sampler;
uniform vec4		view_par;	

in vec4 vertex_location,vertex_texture;
out vec4 frag_texture;

void main(void)
{
	vec4 p=component_info.model_matrix*vec4(0.0,0.0,0.0,1.0);
	vec3 comp_point=p.xyz/p.w;
	float comp_to_eye_length;
	if(target_info.projection_type_flag<=0)
		comp_to_eye_length=target_info.distance;
	else{
		vec3 eye_point=target_info.eye_point.xyz/target_info.eye_point.w;
		comp_to_eye_length=length(comp_point-eye_point);
	}
	
	float comp_height=target_info.half_fovy_tanl*comp_to_eye_length;
	float view_scale=view_par.x;
	float comp_scale=view_scale*comp_height;

	p=target_info.camera_location*vec4(vertex_location.xy,0.0,1.0);
	vec3 dir=(p.xyz/p.w)-(target_info.center_point.xyz/target_info.center_point.w);

	frag_texture=vertex_texture;
	p=vec4(comp_point+dir*comp_scale,1.0);
	gl_Position=target_info.projection_matrix*p;
}
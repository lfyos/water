struct to_vertex_struct
{
	@location(0) vertex_position		:	vec4<f32>
};

struct vertex_to_fragment_struct
{
	@builtin(position)	vertex_position	:	vec4<f32>				
};

struct from_fragment_struct
{
	@builtin(frag_depth)	fragment_depth	:	f32,
	@location(0) 			fragment_color	:	vec4<f32>
};

@vertex
fn vertex_main(tvs:to_vertex_struct)->vertex_to_fragment_struct
{
	var vtfs:vertex_to_fragment_struct;
	vtfs.vertex_position=tvs.vertex_position;
	return vtfs;
}

@fragment
fn fragment_main(vtfs	:	vertex_to_fragment_struct) -> from_fragment_struct
{
	var ffs	:	from_fragment_struct;
	
	ffs.fragment_color=vec4<f32>(0.5,0.5,0.5,1.0);
	ffs.fragment_depth=0.999999;
	
	return 	ffs;
}

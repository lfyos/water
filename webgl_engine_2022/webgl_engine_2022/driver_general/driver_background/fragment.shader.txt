uniform sampler2D no_box,front,back,left,right,top,down;
uniform int mode;

in vec4 frag_location;
layout (location = 0) out vec4 frag_data;

void main(void)
{
	if((mode==0)||(mode==1)){
		frag_data=texture(no_box,vec2(0.5,0.5)+frag_location.xy/2.0);
		return;
	}
	vec4 pp= (target_info.projection_type_flag>0)
			?(target_info.negative_projection_matrix	  *frag_location)
			:(target_info.other_negative_projection_matrix*frag_location);
	vec3 dp=(pp.xyz/pp.w)-(target_info.eye_point.xyz/target_info.eye_point.w);
	vec3 ap=abs(dp);
	if((ap.x>=ap.y)&&(ap.x>=ap.z)){
	    if(dp.x>0.0)
			frag_data=texture(right,vec2((1.0-dp.z/dp.x)/2.0,(1.0+dp.y/dp.x)/2.0));
		else
			frag_data=texture(left, vec2((1.0-dp.z/dp.x)/2.0,(1.0-dp.y/dp.x)/2.0));
	}else if((ap.y>=ap.x)&&(ap.y>=ap.z)){
		if(dp.y>0.0)
			frag_data=texture(top, vec2((1.0+dp.x/dp.y)/2.0,(1.0-dp.z/dp.y)/2.0));
		else
			frag_data=texture(down,vec2((1.0-dp.x/dp.y)/2.0,(1.0-dp.z/dp.y)/2.0));
	}else{	
		if(dp.z>0.0)
			frag_data=texture(back, vec2((1.0+dp.x/dp.z)/2.0,(1.0+dp.y/dp.z)/2.0));
		else
			frag_data=texture(front,vec2((1.0+dp.x/dp.z)/2.0,(1.0-dp.y/dp.z)/2.0));
	}

	return;
}

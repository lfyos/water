struct vertex_to_fragment_struct
{
	@builtin(position)	position	:	vec4<f32>,
	@location(0)		color		:	vec4<f32>
};

@vertex
fn vertex_main(
		@location(0) my_position	:	vec4<f32>,
		@location(1) my_material	:	vec4<f32>,
		@location(2) my_parameter	:	vec4<f32>
		
	)->vertex_to_fragment_struct
{
	var vf	:	vertex_to_fragment_struct;
	vf.color	=my_material;

	if(my_parameter.w<0.0)
	{
		var p0=id_info.matrix*vec4<f32>(0.0,0.0,0.0,1.0);
		var len=length(target_info.right_up_far_point-target_info.left_down_near_point);
		vf.position	=vec4((p0/p0.w+my_position*len).xyz,1.0);
	}else{
		vf.position	=id_info.matrix*vec4(my_position.xyz*my_parameter.w,1.0);
	}	
	vf.position=target_info.projection_matrix*vf.position;
	
	return vf;
}

@fragment
fn fragment_main(vf	:	vertex_to_fragment_struct) -> @location(0)	vec4<f32>
{	
	return vf.color;
}

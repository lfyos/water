				function(component_name,component_id,render)
				{
					render.system_event_processor.pickupmousedown=function(event,pickup_component_id,render)
					{
						render.call_server_component(
								"show_select_component_box_component","all",[["component_id",pickup_component_id]]);
						render.user_call_processor.scene_mousedown(pickup_component_id,event);
						return false;
					};
					render.user_call_processor.scene_mousedown=function(component_id,event)
					{
					
					};
					render.user_call_processor.tree_mousedown=function(component_id,event)
					{
						if(typeof(event)!="object")
							event={
								shiftKey:false,
								ctrlKey	:false,
								altKey	:false
							};
						if(typeof(event.shiftKey)!="boolean")
							event.shiftKey=false;
						if(typeof(event.ctrlKey)!="boolean")
							event.ctrlKey=false;
						if(typeof(event.altKey)!="boolean")
							event.altKey=false;

						if(event.ctrlKey)							
							render.system_call_processor.select_component(
								event.shiftKey?"swap_component":"select_component",[["component_id",component_id]]);
						else
							render.system_call_processor.select_component("clear_all",[],
								function()
								{
									render.system_call_processor.select_component(
										event.shiftKey?"swap_component":"select_component",[["component_id",component_id]]);
								});
					};
					render.user_call_processor.get_component_tree=function()
					{
						return render.get_component_object_by_component_name("system_root_component").component_children[0];
					};
					render.user_call_processor.set_all_transparant_except_selection=function()
					{
						var component_name=encodeURIComponent(encodeURIComponent("system_root_component"));
						render.call_server_component("manipulator_component","all",
							[["event_method","transparency"],["transparency",0.05],["component_name",component_name]],
							function(response_data,render)
							{
								render.call_server_component("manipulator_component","all",
									[["event_method","transparency"],["transparency",1.0],["flag","noselection_none"]]);
							});
					};
					render.user_call_processor.set_all_untransparant=function()
					{
						var component_name=encodeURIComponent(encodeURIComponent("system_root_component"));
						render.call_server_component("manipulator_component","all",
							[["event_method","transparency"],["transparency",1.0],["component_name",component_name]]);
					};
					
					render.user_call_processor.reset_view=function()
					{
						var do_render_request_response_number=render.do_render_request_response_number;
						render.append_routine_function(
							function(render)
							{
								if((render.do_render_request_response_number-do_render_request_response_number)<=2)
									return true;
								render.call_server_component("mouse_modify_location_component","all",
									[["event_operation","dblclick_view_no_pickup"],
									 ["operate_component_id",render.current.camera_component_id]]);
								return false;
							});
					};
					render.user_call_processor.reset_all=function()
					{
						render.system_call_processor.clip_onoff_component(false);
						
						render.call_server_component("manipulator_component","all",
							[["event_method","selection"],["event_operation","clear_all"]],
							function(response_data,render,response_text)
							{
								render.call_server_component("manipulator_component","all",
									[["event_method","transparency"],["transparency",1.0],
									 ["component",encodeURIComponent(encodeURIComponent("system_root_component"))]],
									function(response_data,render,response_text)
									{
										render.call_server_component("manipulator_component","all",
											[["event_method","show_hide_component"],["event_operation","show"]],
											function(response_data,render,response_text)
											{
												render.call_server_component("manipulator_component","all",
													[["event_method","explosion"],["explosion","reset"],["component_name",
													 encodeURIComponent(encodeURIComponent("part_list_component"))]],
													function(response_data,render,response_text)
													{
														setTimeout(
															function()
															{
																render.user_call_processor.reset_view();
																render.call_server_component("manipulator_component","all",
																	[["event_method","part_list"],["operation","create"]]);
															},
															response_data/1000000);
													});
											});
									});
							});
					};
				}

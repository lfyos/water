	/* 1name		*/        组件操作功能组件
	/* 1type		*/         undefined_part
	/* 1location	*/         1    0    0    0    0    1    0    0    0    0    1    0    0    0    0    1  
	/* 1children number */		3
			
			/* 2name		*/	组件操作组件浏览组件
			/* 2type		*/	interface_part
			/* 2location	*/	1    0    0    0    0    1    0    0    0    0    1    0    0    0    0    1
				
				true			8		0.5		1.0		browse_component_render_data.txt
				file_program  							browse_component_render_program.txt
				
			/* 2children number */		0

			/* 2name		*/	组件操作功能选择组件
			/* 2type		*/	interface_part
			/* 2location	*/	1    0    0    0    0    1    0    0    0    0    1    0    0    0    0    1
				
				false	9	0.25	1.2		component.png

				token_program	组件操作功能选择组件
				
				function(component_name,component_id,scene)
				{
					scene.component_event_processor[component_id]={
						pickupmouseselect	:	function(event,component_id,scene)
						{
							var ep=scene.component_event_processor[component_id];
							var function_id=Math.floor(ep.y*12.0);
							ep.hightlight=[0,function_id/12.0,1.0,function_id/12.0+1.0/12.0];
							var str;
							
							switch(function_id){
							case 0:		//执行组件选择
								scene.system_call_processor.set_menu_hide(component_id);
								scene.system_call_processor.set_menu_show("组件操作选择操作组件");
								break;
							case 1:		//隐藏选择组件
							case 2:		//显示选择组件
								scene.caller.call_server_component("manipulator_component","all",[
									["event_method","show_hide_component"],
									["event_operation",(function_id==2)?"true":"false"]]);
								break;
							case 3:		//执行组件剖分
							case 4:		//取消组件剖分
								scene.caller.call_server_component("manipulator_component","all",
									[["event_method","clip"],["event_operation",(function_id==3)?"true":"false"]]);
								break;
							case 5:	//执行爆炸视图
							case 6:	//取消爆炸视图
								scene.caller.call_server_component("manipulator_component","all",[
									["event_method","explosion"],
									["explosion",(function_id==5)?"explosion":"reset"],["t",0.2]]);
								break;
							case 7:	//设置透明
							case 8:	//取消透明
								scene.caller.call_server_component("manipulator_component","all",[
									["event_method","transparency"],["flag","noselection_all"],
									["transparency",(function_id==7)?0.1:1.0]]);
								break;
							case 9:	//设置显示精度
								if((str=prompt("设置显示精度参数"))!=null)
									scene.caller.call_server_component("manipulator_component","all",
										[["event_method","lod"],["value",str]]);
								break;
							case 10://浏览组件树
								scene.operate_component.get_component_event_processor("组件操作组件浏览组件").active_list();
								break; 
							default:
								scene.system_call_processor.set_menu_hide(component_id);
								scene.system_call_processor.set_menu_show("交互界面主菜单");
								break;
							}
							return;
						}
					};
				}
				组件操作功能选择组件

			/* 2child_number	*/	0

			/* 2name		*/	组件操作选择操作组件
			/* 2type		*/	interface_part
			/* 2location	*/	1    0    0    0    0    1    0    0    0    0    1    0    0    0    0    1
				
				false	8	0.25	1.2		selection.png
				
				token_program	组件操作选择操作组件
				
				function(component_name,component_id,scene)
				{
					scene.component_event_processor[component_id]={
						pickupmouseselect	:	function(event,component_id,scene)
						{
							var ep=scene.component_event_processor[component_id];
							var function_id=Math.floor(ep.y*12.0);
							ep.hightlight=[0,function_id/12.0,1.0,function_id/12.0+1.0/12.0];
							var select_operation_str;
							
							switch(function_id){
							case 0:
								select_operation_str="clear_all";	break;
							case 1:
								return;
							case 2:
								select_operation_str="parent";		break;
							case 3:
								select_operation_str="child";		break;
							case 4:
								select_operation_str="move";		break;
							case 5:
								select_operation_str="latest";		break;
							case 6:
								select_operation_str="all";			break;
							case 7:
								select_operation_str="visible";		break;
							case 8:
								select_operation_str="display";		break;
							case 9:
								select_operation_str="select";		break;
							case 10:
								select_operation_str="part_list";	break;
							default:
								scene.system_call_processor.set_menu_show("组件操作功能选择组件");
								scene.system_call_processor.set_menu_hide(component_id);
								return;
							}
							
							scene.caller.call_server_component("manipulator_component","all",
								[["event_method","selection"],["event_operation",select_operation_str]]).
							then(
								function()
								{
									scene.system_call_processor.update_coordinate_display();
								});	
						}
					};
				}

				组件操作选择操作组件

			/* 2child_number	*/	0

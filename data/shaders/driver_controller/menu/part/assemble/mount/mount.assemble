	/* 1name			*/	组件拼装交互界面组件
	/* 1type			*/	undefined_part
	/* 1location		*/	1    0    0    0    0    1    0    0    0    0    1    0    0    0    0    1  
	/* 1children number */	3
			
		/* 2name		*/	组件拼装功能选择组件
		/* 2type		*/	menu_part
		/* 2location	*/	1    0    0    0    0    1    0    0    0    0    1    0    0    0    0    1
			
			mount.png		0.2		0.3
		
			token_program	组件拼装功能选择组件
				function(component_name,component_id,render)
				{
					render.component_event_processor[component_id]={
						pickupmouseselect	:	function(event,component_id,render)
						{
							var ep=render.component_event_processor[component_id];
							var function_id=Math.floor((1.0-ep.y)*3.0);
							switch(function_id){
							case 0:
								render.system_call_processor.set_menu_show_me_only("组件拼装功能控制组件");
								break;
							case 1:
								render.system_call_processor.set_menu_show_me_only("组件拼装功能设计组件");
								break;
							default:
								if(ep.x<=0.5)
									render.system_call_processor.set_menu_show_me_only("交互界面主菜单");
								else
									render.system_call_processor.set_menu_hide(component_id);
								return;
							}
						}
					}
				}
			组件拼装功能选择组件
		/* 2child_number	*/	0

		
		
		/* 2name		*/	组件拼装功能控制组件
		/* 2type		*/	menu_part
		/* 2location	*/	1    0    0    0    0    1    0    0    0    0    1    0    0    0    0    1
			
			mount_control.png		0.2		0.8
		
			token_program	组件拼装功能控制组件
				function(component_name,component_id,render)
				{
					render.component_event_processor[component_id]={
						pickupmouseselect	:	function(event,component_id,render)
						{
							var mcp=render.component_call_processor[
									render.get_component_to_id_object("movement_manager").component_id];
							var ep=render.component_event_processor[component_id];
							var function_id=Math.floor((1.0-ep.y)*8.0);
							
							ep.hightlight=[0,1.0-function_id/8.0-1.0/8.0,1.0,1.0-function_id/8.0];
							switch(function_id){
							case 0:
								mcp.mount_forward(1000);
								render.debug_call_processor.turnon_control_panel(
									render.system_call_processor.collector_list_webpage_url("simple"));
								return;
							case 1:
								mcp.mount_backward(1000);
								render.debug_call_processor.turnon_control_panel(
									render.system_call_processor.collector_list_webpage_url("simple"));
								return;
							case 2:
								mcp.mount_stop();
								return;
							case 3:
								render.debug_call_processor.turnon_control_panel(mcp.mount_search_url());
								return;
							case 4:
								render.debug_call_processor.turnon_control_panel(mcp.mount_edit_url());
								return;
							case 5:
								var speed=prompt("请输入拼装速度");
								if(speed!=null)
									mcp.set_mount_speed(speed);
								return;
							case 6:
								var precision=prompt("请输入拼装精度");
								if(precision!=null)
									mcp.set_mount_precision(precision);
								return;
							default:
								if(ep.x<=0.5)
									render.system_call_processor.set_menu_show_me_only("组件拼装功能选择组件");
								else
									render.system_call_processor.set_menu_hide(component_id);
								return;
							}
						}
					}
				}
			组件拼装功能控制组件
		/* 2child_number	*/	0

		
		/* 2name		*/	组件拼装功能设计组件
		/* 2type		*/	menu_part
		/* 2location	*/	1    0    0    0    0    1    0    0    0    0    1    0    0    0    0    1
			
			mount_design.png		0.2		0.7
		
			token_program	组件拼装功能设计组件
				function(component_name,component_id,render)
				{
					render.component_event_processor[component_id]={
						pickupmouseselect	:	function(event,component_id,render)
						{
							var mcp=render.component_call_processor[
									render.get_component_to_id_object("movement_manager").component_id];
							var url=mcp.mount_edit_url();
							var ep=render.component_event_processor[component_id];
							var index_id=-1,function_id=Math.floor((1.0-ep.y)*7.0);
							
							ep.hightlight=[0,1.0-function_id/7.0-1.0/7.0,1.0,1.0-function_id/7.0];
							
							switch(function_id){
							case 0:
								url =((index_id=render.url.lastIndexOf("/"))<0)?"":(render.url.substring(0,index_id+1));
								url+=render.language_name+"/design.jsp?movement_component_name=movement_manager";
								break;
							case 1:
								mcp.mount_stop();
								break;
							case 2:
								window.open(mcp.mount_jason_url(),"_blank");
								return;
							case 3:
								mcp.save_movement();
								break;
							case 4:
								mcp.reload_movement();
								break;
							case 5:
								mcp.retreat_movement();
								break;
							default:
								if(ep.x<=0.5)
									render.system_call_processor.set_menu_show_me_only("组件拼装功能选择组件");
								else
									render.system_call_processor.set_menu_hide(component_id);
								return;
							}
							render.debug_call_processor.turnon_control_panel(url);
						}
					}
				}
			组件拼装功能设计组件
		/* 2child_number	*/	0
		
		
function construct_process_bar(my_gl,my_width,my_height)
{
	this.gl				=my_gl;
	this.canvas			=document.createElement("canvas");	
	this.canvas.width	=my_width;
	this.canvas.height	=my_height;
	this.ctx			=this.canvas.getContext("2d");
	
	var my_vertex_program=
		"#version 300 es"													+"\n"+
		"precision highp int;"												+"\n"+
		"precision highp float;"											+"\n"+
		
		"in	 vec4 vertex_location,vertex_texture;"							+"\n"+
		"out vec4 frag_texture;"											+"\n"+
		"void main(void)"													+"\n"+
		"{"																	+"\n"+
		"	frag_texture=vertex_texture;"									+"\n"+
		"	gl_Position=vertex_location;"									+"\n"+
		"}"																	+"\n";
	
	var my_fragment_program=
		"#version 300 es"													+"\n"+
		"precision highp int;"												+"\n"+
		"precision highp float;"											+"\n"+
		"uniform sampler2D progress_bar_texture;"							+"\n"+
		"in vec4 frag_texture;"												+"\n"+
		"layout (location = 0) out vec4 frag_data;"							+"\n"+
		"void main(void)"													+"\n"+
		"{"																	+"\n"+
		"	frag_data=texture(progress_bar_texture,vec2(frag_texture.xy));"	+"\n"+
		"}"																	+"\n";

	var my_vertex=this.gl.createShader(this.gl.VERTEX_SHADER);
	this.gl.shaderSource(my_vertex,my_vertex_program);
	this.gl.compileShader(my_vertex);

	var my_fragment=this.gl.createShader(this.gl.FRAGMENT_SHADER);
	this.gl.shaderSource(my_fragment,my_fragment_program);
	this.gl.compileShader(my_fragment);
	
	this.shader_program=this.gl.createProgram();

	this.gl.attachShader(this.shader_program, my_vertex);
    this.gl.attachShader(this.shader_program, my_fragment);     	
    this.gl.linkProgram (this.shader_program);
    
	this.gl.deleteShader(my_vertex);
	this.gl.deleteShader(my_fragment);

	
	
	
	
	this.draw_process_bar=function(
			process_bar_caption,process_bar_current,process_bar_max,
			process_bar_time_length,process_bar_engine_time_length)
	{
		this.ctx.fillStyle="rgb(255,255,255)";
		this.ctx.beginPath();
		this.ctx.moveTo(0,					0);
		this.ctx.lineTo(this.canvas.width,	0);
		this.ctx.lineTo(this.canvas.width,	this.canvas.height);
		this.ctx.lineTo(0,					this.canvas.height);
		this.ctx.lineTo(0,					0);
		this.ctx.fill();
		
		this.ctx.fillStyle="rgb(0,255,0)";
		this.ctx.beginPath();
		this.ctx.moveTo(0,																	0);
		this.ctx.lineTo(Math.round(this.canvas.width*process_bar_current/process_bar_max),	0);
		this.ctx.lineTo(Math.round(this.canvas.width*process_bar_current/process_bar_max),	this.canvas.height);
		this.ctx.lineTo(0,																	this.canvas.height);
		this.ctx.lineTo(0,																	0);
		this.ctx.fill();

		var display_value=process_bar_caption+":";
		
		process_bar_current=1000.0*process_bar_current/process_bar_max;
		display_value+=(Math.round(process_bar_current)/10.0).toString()+"%,";
		display_value+=(Math.round(process_bar_time_length/1000.0)).toString()+"秒,";
		display_value+=(Math.round(process_bar_engine_time_length/1000.0)).toString()+"秒";
		
		this.ctx.font			="bold 64px Arial";
		this.ctx.textAlign		="center";
		this.ctx.textBaseline	="middle";
		this.ctx.fillStyle		="rgb(255,0,0)";
		this.ctx.fillText(display_value,this.canvas.width/2.0,this.canvas.height/2.0);
	}
}
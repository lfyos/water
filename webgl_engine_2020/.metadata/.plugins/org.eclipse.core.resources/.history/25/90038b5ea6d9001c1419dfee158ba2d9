package driver_opengl_fixed_pipeline;

import kernel_camera.camera_result;
import kernel_component.component;
import kernel_component.component_collector;
import kernel_driver.instance_driver;
import kernel_engine.client_information;
import kernel_engine.engine_kernel;


public class extended_instance_driver extends instance_driver
{
	private int close_clip_plane_number;
	private long display_bitmap[];
	private double transparency_value;
	private boolean effective_selected_flag;
	
	public void destroy()
	{
		super.destroy();
		display_bitmap=null;
		transparency_value=-1;
		effective_selected_flag=false;
	}
	public extended_instance_driver(component my_comp,int my_driver_id)
	{
		super(my_comp,my_driver_id);
		display_bitmap=new long[0];
	}
	public void response_init_instance_data(engine_kernel ek,client_information ci)
	{
	}
	public boolean check(engine_kernel ek,client_information ci,camera_result cr)
	{
		int render_buffer_id=cr.get_render_buffer_id(ci);
		if(render_buffer_id>=display_bitmap.length){
			long bak[]=display_bitmap;
			display_bitmap=new long[render_buffer_id+1];
			for(int i=0,ni=bak.length;i<ni;i++)
				display_bitmap[i]=bak[i];
			for(int i=bak.length,ni=display_bitmap.length;i<ni;i++)
				display_bitmap[i]=-1;
		}
		long new_display_bitmap=comp.multiparameter[cr.target.parameter_channel_id].display_bitmap;
		if(display_bitmap[render_buffer_id]!=new_display_bitmap){
			display_bitmap[render_buffer_id]=new_display_bitmap;
			update_component_render_version(render_buffer_id,0);
		}
		if(	  (effective_selected_flag^comp.uniparameter.effective_selected_flag) 
			||(transparency_value!=comp.uniparameter.transparency_value))
		{
			effective_selected_flag=comp.uniparameter.effective_selected_flag;
			transparency_value=comp.uniparameter.transparency_value;
			comp.driver_array[driver_id].update_component_parameter_version();
		}
		if(comp.clip.close_clip_plane_number!=close_clip_plane_number){
			close_clip_plane_number=comp.clip.close_clip_plane_number;
			update_component_parameter_version(0);
		}
		return false;
	}
	public void create_render_parameter(engine_kernel ek,client_information ci,camera_result cr)
	{
		int data_buffer_id=comp.driver_array[driver_id].same_part_component_driver_id;
		int render_buffer_id=cr.get_render_buffer_id(ci);
		ci.request_response.
			print("[",data_buffer_id).
			print(",",display_bitmap[render_buffer_id]).
			print("]");
	}
	public void create_component_parameter(engine_kernel ek,client_information ci)
	{
		ci.request_response.
			print  ("[",comp.component_id).
			print  (",",transparency_value).
			print  (",",close_clip_plane_number).
			print  (",",display_parameter.display_value_id).
			print  (effective_selected_flag?",1]":",0]");
	}
	public String[] response_event(engine_kernel ek,client_information ci)
	{
		return null;
	}
}

uniform vec4 par;

in vec4 frag_id,extra_frag_id,frag_color;
layout (location = 0) out vec4 frag_data[4];

void main(void)
{
	switch(pass_info.method_id){
	case 0:
	case 4:
		if(int(round(frag_id.w))!=2)
				frag_data[0]=frag_color;
		else if(((gl_PointCoord.x-0.5)*(gl_PointCoord.x-0.5)+(gl_PointCoord.y-0.5)*(gl_PointCoord.y-0.5))>0.25)
				discard;
		else if(int(round(frag_id.z))!=0)
				discard;
		else
				frag_data[0]=vec4(1.0,0.0,0.0,1.0);
		return;
	case 1:
		int component_id=int(round(par.w));
		int body_id		=int(round(frag_id.x));
		int face_id		=int(round(frag_id.y));
		int vertex_id	=int(round(frag_id.z));
		
		frag_data[0]=code_integer(component_id);
		frag_data[1]=code_integer(body_id);
		frag_data[2]=code_integer(face_id);
		frag_data[3]=code_integer(vertex_id);
		return;
	default:
		discard;
		return;
	}
	
	return;
}
package kernel_engine;

import java.io.File;
import java.nio.charset.Charset;

import kernel_common_class.change_name;
import kernel_common_class.debug_information;
import kernel_file_manager.file_reader;
import kernel_content_type.get_content_type_change_name;
import kernel_interface.switch_engine_server;

public class system_parameter
{
	public String data_root_directory_name;
	public long last_modified_time;
	
	public String local_data_charset,network_data_charset;
	public String text_class_charset,text_jar_file_charset,js_class_charset,js_jar_file_charset;
	
	public long system_terminate_time;
	
	public String user_file_name,shader_file_name,default_parameter_directory;
	
	public int normal_loading_number,max_loading_number,max_material_id;
	
	public int response_block_size;
	
	public long engine_expire_time_length,engine_touch_time_length,download_start_time_length,download_minimal_time_length;
	
	public int create_engine_concurrent_number;
	public double create_engine_sleep_time_length_scale;
	public long create_engine_sleep_time_length,create_engine_max_sleep_time_length;
	
	public long show_process_bar_interval,file_buffer_expire_time_length;
	
	public int max_client_interface_number;
	
	public int max_engine_kernel_number,max_engine_component_number;
	
	public long max_buffer_object_head_package_length;
	
	public String file_download_cors_string;
	
	public int max_process_component_load_number,process_modifier_times;
	
	public change_name language_change_name,content_type_change_name;
	public proxy_parameter proxy_par;
	public switch_engine_server	switch_server;

	public system_parameter(system_parameter sp)
	{
		data_root_directory_name		=new String(sp.data_root_directory_name);
		
		last_modified_time				=sp.last_modified_time;

		local_data_charset				=new String(sp.local_data_charset);
		network_data_charset			=new String(sp.network_data_charset);
		text_class_charset				=new String(sp.text_class_charset);
		text_jar_file_charset			=new String(sp.text_jar_file_charset);
		js_class_charset				=new String(sp.js_class_charset);
		js_jar_file_charset				=new String(sp.js_jar_file_charset);
		
		system_terminate_time			=sp.system_terminate_time;
		
		user_file_name					=new String(sp.user_file_name);
		shader_file_name				=new String(sp.shader_file_name);
		default_parameter_directory		=new String(sp.default_parameter_directory);
		
		normal_loading_number			=sp.normal_loading_number;
		max_loading_number				=sp.max_loading_number;
		max_material_id					=sp.max_material_id;
		
		response_block_size				=sp.response_block_size;
		
		engine_expire_time_length		=sp.engine_expire_time_length;
		engine_touch_time_length		=sp.engine_touch_time_length;
		download_start_time_length		=sp.download_start_time_length;
		download_minimal_time_length	=sp.download_minimal_time_length;
		
		create_engine_concurrent_number			=sp.create_engine_concurrent_number;
		create_engine_sleep_time_length_scale	=sp.create_engine_sleep_time_length_scale;
		create_engine_sleep_time_length			=sp.create_engine_sleep_time_length;
		create_engine_max_sleep_time_length		=sp.create_engine_max_sleep_time_length;
		
		show_process_bar_interval				=sp.show_process_bar_interval;
		file_buffer_expire_time_length			=sp.file_buffer_expire_time_length;
		
		max_client_interface_number		=sp.max_client_interface_number;
		
		max_engine_kernel_number		=sp.max_engine_kernel_number;
		max_engine_component_number		=sp.max_engine_component_number;
		
		max_buffer_object_head_package_length=sp.max_buffer_object_head_package_length;
		
		file_download_cors_string		=new String(sp.file_download_cors_string);
		
		max_process_component_load_number=sp.max_process_component_load_number;
		process_modifier_times			=sp.process_modifier_times;
		
		content_type_change_name		=new change_name(sp.content_type_change_name,false);
		language_change_name			=new change_name(sp.language_change_name,false);
		
		proxy_par						=sp.proxy_par;
		switch_server					=sp.switch_server;
	}
	public system_parameter(String application_directory_name,
			String data_configure_environment_variable,String proxy_configure_environment_variable)
	{
		String data_configure_file_name;
		if((data_configure_file_name=System.getenv(data_configure_environment_variable))==null)
			data_configure_file_name=data_configure_environment_variable;
		data_configure_file_name	=file_reader.separator(data_configure_file_name.trim());
		if(data_configure_file_name.charAt(0)=='.')
			data_configure_file_name=application_directory_name+data_configure_file_name;
		
		String proxy_configure_file_name;
		if((proxy_configure_file_name=System.getenv(proxy_configure_environment_variable))==null)
			proxy_configure_file_name=proxy_configure_environment_variable;
		proxy_configure_file_name=file_reader.separator(proxy_configure_file_name.trim());
		if(proxy_configure_file_name.charAt(0)=='.')
			proxy_configure_file_name=application_directory_name+proxy_configure_file_name;

		file_reader f=new file_reader(data_configure_file_name,Charset.defaultCharset().name());
		if(f.error_flag()){
			debug_information.println("Can't not open configure.txt on working directory");
			debug_information.println("Check content in configure.txt on web server please");
			debug_information.println("It probably contain error content or pointer to wrong directory");
			debug_information.println("application_directory_name is ",application_directory_name);
			debug_information.println("data_configure_file_name is ",data_configure_file_name);
			debug_information.println("proxy_configure_file_name is ",proxy_configure_file_name);
		}
		
		if((local_data_charset=f.get_string())==null)
			local_data_charset=Charset.defaultCharset().name();
		else if(local_data_charset.compareTo("default_charset")==0)
			local_data_charset=Charset.defaultCharset().name();
		f.close();

		f=new file_reader(data_configure_file_name,local_data_charset);
		data_root_directory_name=f.directory_name;
		last_modified_time=f.lastModified_time;
		
		if((local_data_charset=f.get_string())==null)
			local_data_charset=Charset.defaultCharset().name();
		else if(local_data_charset.compareTo("default_charset")==0)
			local_data_charset=Charset.defaultCharset().name();
		
		if((network_data_charset=f.get_string())==null)
			network_data_charset=Charset.defaultCharset().name();
		if(network_data_charset.compareTo("default_charset")==0)
			network_data_charset=Charset.defaultCharset().name();
		
		if((text_class_charset=f.get_string())==null)
			text_class_charset=Charset.defaultCharset().name();
		if(text_class_charset.compareTo("default_charset")==0)
			text_class_charset=Charset.defaultCharset().name();
		
		if((text_jar_file_charset=f.get_string())==null)
			text_jar_file_charset=Charset.defaultCharset().name();
		if(text_jar_file_charset.compareTo("default_charset")==0)
			text_jar_file_charset=Charset.defaultCharset().name();
		
		if((js_class_charset=f.get_string())==null)
			js_class_charset=Charset.defaultCharset().name();
		if(js_class_charset.compareTo("default_charset")==0)
			js_class_charset=Charset.defaultCharset().name();
		
		if((js_jar_file_charset=f.get_string())==null)
			js_jar_file_charset=Charset.defaultCharset().name();
		if(js_jar_file_charset.compareTo("default_charset")==0)
			js_jar_file_charset=Charset.defaultCharset().name();
		
		system_terminate_time=Long.MAX_VALUE;
		
		if((user_file_name=f.get_string())==null)
			user_file_name="";
		else
			user_file_name=file_reader.separator(user_file_name).trim();
		
		if((shader_file_name=f.get_string())==null)
			shader_file_name="";
		else
			shader_file_name=file_reader.separator(shader_file_name).trim();
		
		if((default_parameter_directory=f.get_string())==null)
			default_parameter_directory="";
		else {
			default_parameter_directory=file_reader.separator(default_parameter_directory).trim();
			int str_length=default_parameter_directory.length();
			if(default_parameter_directory.charAt(str_length-1)!=File.separatorChar)
				default_parameter_directory+=File.separator;
			default_parameter_directory=f.directory_name+default_parameter_directory;
		}

		String language_change_file_name;
		if((language_change_file_name=f.get_string())==null)
			language_change_file_name="";
		else
			language_change_file_name=file_reader.separator(language_change_file_name);	
		
		String switch_server_url_file_name;
		if((switch_server_url_file_name=f.get_string())==null)
			switch_server_url_file_name="";
		else
			switch_server_url_file_name=file_reader.separator(switch_server_url_file_name);	
		
		normal_loading_number					=f.get_int();
		max_loading_number						=f.get_int();
		max_material_id							=f.get_int();
		
		response_block_size						=f.get_int();
		
		engine_expire_time_length				=f.get_long();
		engine_touch_time_length				=f.get_long();
		download_start_time_length				=f.get_long();
		download_minimal_time_length			=f.get_long();
		
		create_engine_concurrent_number			=f.get_int();
		create_engine_sleep_time_length_scale	=f.get_double();
		create_engine_sleep_time_length			=f.get_long();
		create_engine_max_sleep_time_length		=f.get_long();
		
		show_process_bar_interval				=f.get_long();
		file_buffer_expire_time_length			=f.get_long();
		
		max_client_interface_number				=f.get_int();
		
		max_engine_kernel_number				=f.get_int();
		max_engine_component_number				=f.get_int();

		max_buffer_object_head_package_length	=f.get_long();

		if((file_download_cors_string=f.get_string())==null)
			file_download_cors_string="*";
		else {
			String cores_file_name=f.directory_name+file_reader.separator(file_download_cors_string);
			if(!(new File(cores_file_name).exists()))
				file_download_cors_string=file_download_cors_string.trim();
			else{
				file_download_cors_string="";
				for(file_reader cors_fr=new file_reader(cores_file_name,f.get_charset());;) {
					if(cors_fr.eof()){
						cors_fr.close();
						break;
					}
					String str;
					if((str=cors_fr.get_line())!=null)
						if((str=str.trim()).length()>0)
							file_download_cors_string+=str;
				}
			}
		}
		
		max_process_component_load_number		=f.get_int();
		process_modifier_times					=f.get_int();
		
		f.close();
		
		proxy_par=new proxy_parameter(proxy_configure_file_name,local_data_charset);
		language_change_name=new change_name(
				new String[]{data_root_directory_name+language_change_file_name},
				null,local_data_charset);
		content_type_change_name=get_content_type_change_name.get_change_name(text_class_charset,text_jar_file_charset);
		
		switch_server=new switch_engine_server(data_root_directory_name+switch_server_url_file_name,local_data_charset);
		
		return;
	}
}

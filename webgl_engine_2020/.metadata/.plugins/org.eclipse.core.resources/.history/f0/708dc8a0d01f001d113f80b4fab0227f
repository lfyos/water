uniform mat4 par,color_par,pickup_color_par;

in	vec4 vertex_location,vertex_normal,vertex_material,vertex_id,vertex_texture;
out vec4 frag_id,frag_texture;

void main(void)
{
	float my_depth,height_scale;
	
	gl_PointSize=16.0;
	
	frag_id		=vertex_id;
	frag_texture=vertex_texture;
	
	gl_Position =component_info.model_matrix*vec4(par[0].xyz,1.0);
	gl_Position =target_info.projection_matrix*gl_Position;
	my_depth=gl_Position.z/gl_Position.w;
	gl_Position =target_info.negative_screen_move_matrix*gl_Position;
	gl_Position/=gl_Position.w;
	
	gl_Position.x+=vertex_location.x*par[2].x*float(system_info.canvas_width)/float(system_info.canvas_height);
	
	if((gl_Position.y+par[2].y+par[2].z)<=1.0)
		height_scale=1.0;
	else
		height_scale=(1.0-gl_Position.y-par[2].z)/par[2].y;

	if(vertex_location.y<=1.0)
		gl_Position.y+=vertex_location.y*par[2].y*height_scale;
	else
		gl_Position.y+=par[2].y*height_scale+(vertex_location.y-1.0)*par[2].z;
	
	gl_Position =target_info.screen_move_matrix*gl_Position;
	gl_Position.z=gl_Position.w*my_depth;
}

package kernel_engine;

import java.io.File;

import kernel_render.render;
import kernel_part.part;
import kernel_common_class.sorter;
import kernel_file_manager.file_reader;
import kernel_file_manager.file_writer;

public class engine_boftal_creator extends sorter <part,String>
{
	public int compare_data(part s,String t)
	{
		return 0;
	}
	public int compare_key(part s,String t)
	{
		return 0;
	}
	public engine_boftal_creator(render renders[],String file_name,String file_charset)
	{
		part p;
		int number=0;
		boolean should_not_create_flag=true;
		
		long last_time=new File(file_name).lastModified();
		for(int render_id=0,render_number=renders.length;render_id<render_number;render_id++)
			if(renders[render_id]!=null)
				if(renders[render_id].parts!=null)
					for(int part_id=0,part_number=renders[render_id].parts.length;part_id<part_number;part_id++)
						if((p=renders[render_id].parts[part_id]).part_par.engine_boftal_flag)
							switch(p.part_type_id) {
							case 1:
							case 2:
								number++;
								if(p.boftal.buffer_object_head_last_modify_time>=last_time) 
									should_not_create_flag=false;
								break;
							}
		if(should_not_create_flag)
			return;
		
		data_array=new part[number];
		number=0;
		for(int render_id=0,render_number=renders.length;render_id<render_number;render_id++)
			if(renders[render_id]!=null)
				if(renders[render_id].parts!=null)
					for(int part_id=0,part_number=renders[render_id].parts.length;part_id<part_number;part_id++)
						if((p=renders[render_id].parts[part_id]).part_par.engine_boftal_flag)
							switch(p.part_type_id) {
							case 1:
							case 2:
								data_array[number++]=p;
								break;
							}
		
	}
}

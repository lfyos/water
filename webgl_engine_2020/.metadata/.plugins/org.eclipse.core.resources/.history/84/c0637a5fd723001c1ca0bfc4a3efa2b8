package kernel_maintain;

import kernel_common_class.debug_information;
import kernel_file_manager.file_reader;
import kernel_file_manager.file_writer;

public class converter
{
	private static void material(String source_file_name,String target_file_name,String file_charset)
	{
		file_reader fr=new file_reader(source_file_name,file_charset);
		file_writer fw=new file_writer(target_file_name,file_charset);
		fw.println("			\"material\"	:	[");
		for(int i=0,ni=fr.get_int();i<ni;i++) {
			fr.get_int();
			double color[]=new double[] {fr.get_double(),fr.get_double(),fr.get_double(),fr.get_double()};
			double ambient=fr.get_double(),		diffuse=fr.get_double(),		specular=fr.get_double();
			double shininess=fr.get_double();
			fr.get_double();
			double emission=fr.get_double();
			String texture_file_name=fr.get_string();
			double texture_move_x=fr.get_double();
			double texture_move_y=fr.get_double();
			double texture_alf=fr.get_double();
			double texture_scale=fr.get_double();
			double texture_cos_scale=Math.cos(Math.PI*texture_alf/180.0)*texture_scale;
			double texture_sin_scale=Math.sin(Math.PI*texture_alf/180.0)*texture_scale;

			fw.println("				{");
			
			fw.println("					\"vertex_color_type\"		:	1,");
			fw.println("					\"fragment_color_type\"	:	",	(texture_file_name.compareTo("notexture")==0)?"0,":"1,");
			fw.println("					\"color_parameter\"		:	[0.0,	0.0,	0.0,	1.0],");
			fw.println("					\"texture_parameter\"		:	[",
					texture_move_x				+",	"	+texture_move_y				+",	"+
					texture_cos_scale			+",	"	+texture_sin_scale			+"],");
			fw.println("					\"texture_file\"			:	",
					(texture_file_name.compareTo("notexture")==0)?"null,":(texture_file_name+","));
			fw.println("					\"color\"					:	[",	color[0]+",	"+color[1]+",	"+color[2]+",	1],");
			fw.println("					\"ambient\"				:	[",		ambient+",	"+ambient+",	"+ambient+",	1],");
			fw.println("					\"diffuse\"				:	[",		diffuse+",	"+diffuse+",	"+diffuse+",	1],");
			fw.println("					\"specular\"				:	[",	specular+",	"+specular+",	"+specular+",	1],");
			fw.println("					\"emission\"				:	[",	emission+",	"+emission+",	"+emission+",	1],");
			fw.println("					\"shininess\"				:	",	shininess);
			
			fw.println("				}",(i<(ni-1))?",":"");
		}
		fw.println("			]");
		fw.close();
		fr.close();
	}
	private static void part_list(String file_name,String file_charset)
	{
		file_reader fr=new file_reader(file_name,file_charset);
		
		while(!(fr.eof())) {
			fr.get_string();
			fr.get_string();
			fr.get_string();
			file_name=fr.get_string();
			fr.get_string();
			if(fr.get_string()==null)
				continue;
			if(file_name==null)
				continue;
			
			file_name=fr.directory_name+file_name;
			file_writer.file_rename(file_name,file_name+".old");
			material(file_name+".old",file_name,file_charset);
			file_writer.file_delete(file_name+".old");
		}
		fr.close();
	}
	private static void render_list(String file_name,String file_charset)
	{
		file_writer.file_rename(file_name,file_name+".old");
		file_reader fr=new file_reader(file_name+".old",file_charset);
		file_writer fw=new file_writer(file_name,file_charset);
		while(!(fr.eof())) {
			String str1=fr.get_string();
			String str2=fr.get_string();
			String str3=fr.get_string();
			String str4=fr.get_string();
			String str5=fr.get_string();
			String str6=fr.get_string();
			if((str5==null)||(str6==null))
				continue;
			
			file_name=fr.directory_name+str4;
			debug_information.println(file_name);
			part_list(file_name,file_charset);
			
			fw.print  (		str1);
			fw.print  ("\t",str2);
			fw.print  ("\t",str3);
			fw.print  ("\t",str4);
			fw.print  ("\t","relative");
			fw.print  ("\t","light.txt");
			fw.println();
		}
		fr.close();
		fw.close();
		file_writer.file_delete(file_name+".old");
	}
	public static void main(String args[])
	{
		debug_information.println("Begin");
		
		render_list("E:\\water_all\\data\\project\\part\\solidworks\\render.list",null);
		render_list("E:\\water_all\\data\\project\\part\\other_part\\render.list",null);
		render_list("E:\\water_all\\data\\project\\boat\\part\\render.list",null);
		
		debug_information.println("End");
	}
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.14
 * Generated at: 2021-03-16 00:41:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.chinese;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class design_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"Pragma\" content=\"no-cache\">\r\n");
      out.write("\r\n");
      out.write("<title>设计</title>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");

{
	String render_windows_name=request.getParameter("windows");
	String movement_component_name=request.getParameter("movement_component_name");
	String render_string;
	
	String mount_call_processor_string=request.getParameter("windows");
	mount_call_processor_string=((mount_call_processor_string==null)?"parent":mount_call_processor_string);
	if(mount_call_processor_string.compareTo("top")==0)
		mount_call_processor_string="window.top.";
	else if(mount_call_processor_string.compareTo("parent")==0)
		mount_call_processor_string="window.parent.";
	else if(mount_call_processor_string.compareTo("this")==0)
		mount_call_processor_string="";
	else
		mount_call_processor_string ="window.frames[\""+mount_call_processor_string+"\"].";
	
	out.print("var mcp="+mount_call_processor_string+"render.component_call_processor["
		+mount_call_processor_string+"render.get_component_to_id_object(\""
		+movement_component_name+"\").component_id];");
};

      out.write("\r\n");
      out.write("\r\n");
      out.write("function set_point_number(response_data,render)\r\n");
      out.write("{\r\n");
      out.write("\tdocument.getElementById(\"point_number\").value=response_data;\r\n");
      out.write("}\r\n");
      out.write("function create_coordinate_id()\r\n");
      out.write("{\r\n");
      out.write("\tvar my_coordinate_flag=0;\r\n");
      out.write("\tif(document.getElementById(\"component_coordinate\").checked)\r\n");
      out.write("\t\tmy_coordinate_flag=0;\r\n");
      out.write("\telse if(document.getElementById(\"camera_coordinate\").checked)\r\n");
      out.write("\t\tmy_coordinate_flag=1;\r\n");
      out.write("\telse if(document.getElementById(\"view_coordinate\").checked)\r\n");
      out.write("\t\tmy_coordinate_flag=2;\r\n");
      out.write("\telse\r\n");
      out.write("\t\tmy_coordinate_flag=-1;\r\n");
      out.write("\treturn my_coordinate_flag;\r\n");
      out.write("}\r\n");
      out.write("function get_location()\r\n");
      out.write("{\r\n");
      out.write("\tmcp.get_component_location(null,create_coordinate_id(),\r\n");
      out.write("\t\tfunction(response_data,render)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tdocument.getElementById(\"point_number\").value=response_data.number;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"mx\").value=response_data.mx;\r\n");
      out.write("\t\t\tdocument.getElementById(\"my\").value=response_data.my;\r\n");
      out.write("\t\t\tdocument.getElementById(\"mz\").value=response_data.mz;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tdocument.getElementById(\"rx\").value=response_data.rx;\r\n");
      out.write("\t\t\tdocument.getElementById(\"ry\").value=response_data.ry;\r\n");
      out.write("\t\t\tdocument.getElementById(\"rz\").value=response_data.rz;\r\n");
      out.write("\t\t});\r\n");
      out.write("}\r\n");
      out.write("function set_location()\r\n");
      out.write("{\r\n");
      out.write("\tmcp.set_component_location(null,create_coordinate_id(),\r\n");
      out.write("\t\tdocument.getElementById(\"mx\").value,document.getElementById(\"my\").value,document.getElementById(\"mz\").value,\r\n");
      out.write("\t\tdocument.getElementById(\"rx\").value,document.getElementById(\"ry\").value,document.getElementById(\"rz\").value);\r\n");
      out.write("}\r\n");
      out.write("function reset_move()\r\n");
      out.write("{\t\r\n");
      out.write("\tdocument.getElementById(\"mx\").value=0;\r\n");
      out.write("\tdocument.getElementById(\"my\").value=0;\r\n");
      out.write("\tdocument.getElementById(\"mz\").value=0;\r\n");
      out.write("\tset_location();\r\n");
      out.write("}\r\n");
      out.write("function reset_rotate()\r\n");
      out.write("{\t\r\n");
      out.write("\tdocument.getElementById(\"rx\").value=0;\r\n");
      out.write("\tdocument.getElementById(\"ry\").value=0;\r\n");
      out.write("\tdocument.getElementById(\"rz\").value=0;\r\n");
      out.write("\tset_location();\r\n");
      out.write("}\r\n");
      out.write("function add_movement_point()\r\n");
      out.write("{\r\n");
      out.write("\tvar str;\r\n");
      out.write("\tmcp.add_movement_point(null,create_coordinate_id(),\r\n");
      out.write("\t\tdocument.getElementById(\"mx\").value,document.getElementById(\"my\").value,document.getElementById(\"mz\").value,\r\n");
      out.write("\t\tdocument.getElementById(\"rx\").value,document.getElementById(\"ry\").value,document.getElementById(\"rz\").value,\r\n");
      out.write("\t\tparseFloat(document.getElementById(\"t\").value)*1000*1000,\r\n");
      out.write("\t\t[\r\n");
      out.write("\t\t\t((str=document.getElementById(\"parameter0\").value)!=null)?encodeURIComponent(encodeURIComponent(str)):null,\r\n");
      out.write("\t\t\t((str=document.getElementById(\"parameter1\").value)!=null)?encodeURIComponent(encodeURIComponent(str)):null,\r\n");
      out.write("\t\t\t((str=document.getElementById(\"parameter2\").value)!=null)?encodeURIComponent(encodeURIComponent(str)):null,\r\n");
      out.write("\t\t\t((str=document.getElementById(\"parameter3\").value)!=null)?encodeURIComponent(encodeURIComponent(str)):null\r\n");
      out.write("\t\t],set_point_number);\r\n");
      out.write("}\r\n");
      out.write("function delete_movement_point()\r\n");
      out.write("{\r\n");
      out.write("\tmcp.delete_movement_point(set_point_number);\r\n");
      out.write("}\r\n");
      out.write("function add_movement()\r\n");
      out.write("{\r\n");
      out.write("\tmcp.add_movement(null,\r\n");
      out.write("\t\tdocument.getElementById(\"starthide\"\t\t).checked,\r\n");
      out.write("\t\tdocument.getElementById(\"terminatehide\"\t).checked,\r\n");
      out.write("\t\tset_point_number);\r\n");
      out.write("}\r\n");
      out.write("function set_coordinate(component_flag,camera_flag,view_flag)\r\n");
      out.write("{\r\n");
      out.write("\tdocument.getElementById(\"component_coordinate\"\t).checked=component_flag;\r\n");
      out.write("\tdocument.getElementById(\"camera_coordinate\"\t\t).checked=camera_flag;\r\n");
      out.write("\tdocument.getElementById(\"view_coordinate\"\t\t).checked=view_flag;\r\n");
      out.write("\tget_location();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function set_state_radio(on,off)\r\n");
      out.write("{\r\n");
      out.write("\tdocument.getElementById(on ).checked=true;\r\n");
      out.write("\tdocument.getElementById(off).checked=false;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body onload=\"set_coordinate(true,false,false);\">\r\n");
      out.write("\r\n");
      out.write("<form style=\"white-space:nowrap;text-align:center;vertical-align:top\">\r\n");
      out.write("\r\n");
      out.write("<h3>坐标系</h3>\r\n");
      out.write("<input type=\"checkbox\"\tid=\"component_coordinate\" \t\tonclick=\"set_coordinate(true,false,false);\"\t>杆件&nbsp;\r\n");
      out.write("<input type=\"checkbox\"\tid=\"camera_coordinate\" \t\t\tonclick=\"set_coordinate(false,true,false);\"\t>相机&nbsp;\r\n");
      out.write("<input type=\"checkbox\"\tid=\"view_coordinate\" \t\t\tonclick=\"set_coordinate(false,false,true);\"\t>视口<br/>\r\n");
      out.write("\r\n");
      out.write("<hr/><h3>杆件平移</h3>\r\n");
      out.write("X:<input type=\"number\" \tid=\"mx\"\t\t\t\t\t\t\tonkeyup=\"set_location();\"\tonclick=\"set_location();\"\tstyle=\"width:100px;\">\r\n");
      out.write("Y:<input type=\"number\"\tid=\"my\"\t\t\t\t\t\t\tonkeyup=\"set_location();\"\tonclick=\"set_location();\"\tstyle=\"width:100px;\">\r\n");
      out.write("Z:<input type=\"number\"\tid=\"mz\"\t\t\t\t\t\t\tonkeyup=\"set_location();\"\tonclick=\"set_location();\"\tstyle=\"width:100px;\"><br/>\r\n");
      out.write("<input type=\"button\"\tid=\"m_get\"\t\tvalue=\"提取\"\t\t\t\t\t\t\t\t\tonclick=\"get_location();\"\t>\r\n");
      out.write("<input type=\"button\"\tid=\"m\"\t\t\tvalue=\"复位\"\t\t\t\t\t\t\t\t\tonclick=\"reset_move();\"\t\t><br/>\r\n");
      out.write("\r\n");
      out.write("<hr/><h3>杆件旋转</h3>\r\n");
      out.write("X:<input type=\"number\"\tid=\"rx\"\t\t\t\t\t\t\tonkeyup=\"set_location();\"\tonclick=\"set_location();\"\tstyle=\"width:100px;\">\r\n");
      out.write("Y:<input type=\"number\"\tid=\"ry\"\t\t\t\t\t\t\tonkeyup=\"set_location();\"\tonclick=\"set_location();\"\tstyle=\"width:100px;\">\r\n");
      out.write("Z:<input type=\"number\"\tid=\"rz\"\t\t\t\t\t\t\tonkeyup=\"set_location();\"\tonclick=\"set_location();\"\tstyle=\"width:100px;\"><br/>\r\n");
      out.write("<input type=\"button\"\tid=\"r_get\"\t\tvalue=\"提取\"\t\t\t\t\t\t\t\t\tonclick=\"get_location();\"\t>\r\n");
      out.write("<input type=\"button\"\tid=\"r\"\t\t\tvalue=\"复位\"\t\t\t\t\t\t\t\t\tonclick=\"reset_rotate();\"\t><br/>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<hr/><h3>运动时间:\r\n");
      out.write("<input type=\"number\"\tid=\"t\"\t\t\tvalue=\"1000\"\tonkeyup=\"set_location();\"\tonclick=\"set_location();\"\tstyle=\"width:100px;\">\r\n");
      out.write("</h3>\r\n");
      out.write("\r\n");
      out.write("<br/>起始状态\r\n");
      out.write("<input type=\"radio\"\t\tid=\"starthide\"\t\tchecked\t\tonclick=\"set_location();set_state_radio('starthide','startshow');\">隐藏\r\n");
      out.write("<input type=\"radio\"\t\tid=\"startshow\"\t\t\t\t\tonclick=\"set_location();set_state_radio('startshow','starthide');\">显示\r\n");
      out.write("\r\n");
      out.write("<br/>终止状态\r\n");
      out.write("<input type=\"radio\"\t\tid=\"terminatehide\"\t\t\t\tonclick=\"set_location();set_state_radio('terminatehide','terminateshow');\">隐藏\r\n");
      out.write("<input type=\"radio\"\t\tid=\"terminateshow\"\tchecked\t\tonclick=\"set_location();set_state_radio('terminateshow','terminatehide');\">显示\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<hr/><h3>\r\n");
      out.write("当前运动点数:<output  \t\tid=\"point_number\"></output>\r\n");
      out.write("</h3>\r\n");
      out.write("\r\n");
      out.write("<input  type=\"button\"\tid=\"add_point\"\t\tvalue=\"添加运动点\"\tonclick=\"add_movement_point();\"\t\t>\r\n");
      out.write("<input  type=\"button\"\tid=\"delete_point\"\tvalue=\"删除运动点\"\tonclick=\"delete_movement_point();\"\t><br/><br/>\r\n");
      out.write("<input  type=\"button\"\tid=\"add_move\"\t\tvalue=\"添加运动\"\tonclick=\"add_movement();\"\t\t\t>\r\n");
      out.write("<input  type=\"button\"\tid=\"load_location\"\tvalue=\"位置加载\"\tonclick=\"window.location.reload();\"\t>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<hr/><h3>杆件参数</h3>\r\n");
      out.write("参数1:<input type=\"text\"\tid=\"parameter0\"\t\tstyle=\"width:300px;\"><br/>\r\n");
      out.write("参数2:<input type=\"text\"\tid=\"parameter1\"\t\tstyle=\"width:300px;\"><br/>\r\n");
      out.write("参数2:<input type=\"text\"\tid=\"parameter2\"\t\tstyle=\"width:300px;\"><br/>\r\n");
      out.write("参数3:<input type=\"text\"\tid=\"parameter3\"\t\tstyle=\"width:300px;\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

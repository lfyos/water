/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.14
 * Generated at: 2020-05-06 11:37:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.huxiaomei;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class draw_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"Pragma\" content=\"no-cache\">\r\n");
      out.write("\r\n");
      out.write("<title></title>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");

{
	String str;
	
	out.println("var user_name=\""			+(((str=request.getParameter("user_name"			))==null)?"huxiaomei":str)+"\";");
	out.println("var pass_word=\""			+(((str=request.getParameter("pass_word"			))==null)?"huxiaomei":str)+"\";");	
	out.println("var scene_name=\""			+(((str=request.getParameter("scene_name"			))==null)?"":str)+"\";");
	out.println("var link_name=\""			+(((str=request.getParameter("link_name"			))==null)?"":str)+"\";");
}

      out.write("\r\n");
      out.write("var render_object;\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"../interface.jsp?function_name=construct_render_object\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../chinese/draw.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"draw.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("function body_onload()\r\n");
      out.write("{\r\n");
      out.write("\tdocument.oncontextmenu = function(){return false;}\r\n");
      out.write("\t\r\n");
      out.write("\tvar width\t\t=window.innerWidth *0.975;\r\n");
      out.write("\tvar height\t\t=window.innerHeight*0.950;\r\n");
      out.write("\tvar my_canvas\t=document.getElementById(\"my_canvas\");\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tmy_canvas.height=height;\r\n");
      out.write("\tmy_canvas.width=width;\r\n");
      out.write("\t\r\n");
      out.write("\tconstruct_render_object(my_canvas,\r\n");
      out.write("\t\tuser_name,pass_word,\"chinese\",scene_name,link_name,[],\r\n");
      out.write("\t\tfunction(my_render_object)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\trender_object=my_render_object;\r\n");
      out.write("\t\t\tdocument.title=render_object.title;\r\n");
      out.write("\t\t\tbody_onresize(null);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tfor(var i=0;i<8;i++)\r\n");
      out.write("\t\t\t\trender_object.utility.call_server_component(\r\n");
      out.write("\t\t\t\t\t\"sky_box_component_\"+i.toString(),\"all\",\r\n");
      out.write("\t\t\t\t\t[[\"operation\",\"directory\"],[\"directory\",\"picture_1/\"]]);\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function switch_mouse_function(name)\r\n");
      out.write("{\r\n");
      out.write("\tvar function_id=0;\r\n");
      out.write("\tswitch(document.getElementById(name).value){\r\n");
      out.write("\tdefault:\r\n");
      out.write("\tcase \"平移组件\":\t\r\n");
      out.write("\t\tfunction_id=300;\r\n");
      out.write("\tcase \"旋转视口\":\t\r\n");
      out.write("\t\trender_object.event_component.mouse.\tcomponent_name\t=\"mouse_modify_location_component\";\r\n");
      out.write("\t\trender_object.event_component.keyboard.\tcomponent_name\t=\"mouse_modify_location_component\";\r\n");
      out.write("\t\trender_object.event_component.mouse.\tfunction_id\t\t=function_id;\r\n");
      out.write("\t\trender_object.event_component.keyboard.\tfunction_id\t\t=function_id;\r\n");
      out.write("\t\trender_object.utility.set_event_component(\"mouse_modify_location_component\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\tcase \"标注尺寸\":\t\tfunction_id=0;\tbreak;\r\n");
      out.write("\tcase \"标注X方向\":\tfunction_id=1;\tbreak;\r\n");
      out.write("\tcase \"标注Y方向\":\tfunction_id=2;\tbreak;\r\n");
      out.write("\tcase \"标注Z方向\":\tfunction_id=3;\tbreak;\r\n");
      out.write("\tcase \"标注XY面\":\t\tfunction_id=10;\tbreak;\r\n");
      out.write("\tcase \"标注YZ面\":\t\tfunction_id=11;\tbreak;\r\n");
      out.write("\tcase \"标注ZX面\":\t\tfunction_id=12;\tbreak;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\trender_object.event_component.mouse.\tcomponent_name\t=\"tag_controller\";\r\n");
      out.write("\trender_object.event_component.keyboard.\tcomponent_name\t=\"tag_controller\";\r\n");
      out.write("\trender_object.event_component.mouse.\tfunction_id\t\t=function_id;\r\n");
      out.write("\trender_object.event_component.keyboard.\tfunction_id\t\t=function_id;\r\n");
      out.write("\trender_object.utility.set_event_component(\"tag_controller\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function process_pipe_pig(name)\r\n");
      out.write("{\r\n");
      out.write("\tvar opts=document.getElementById(name);\r\n");
      out.write("\tvar url,order_str=opts.value;\r\n");
      out.write("\r\n");
      out.write("\tfor(var i=0;i<opts.options.length;i++)\r\n");
      out.write("\t\topts.options[i].selected=\"\";\r\n");
      out.write("\t\r\n");
      out.write("\tswitch(order_str){\r\n");
      out.write("\tdefault:\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\tcase \"向前移动管道猪\":\r\n");
      out.write("\t\trender_object.utility.call_server_component(\"movement_manager\",\"all\",\r\n");
      out.write("\t\t\t\t[[\"operation\",\"movement\"],[\"move_method\",\"continue\"],[\"direct\",\"forward\"],[\"time\",\"1000\"]]);\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase \"暂停移动管道猪\":\r\n");
      out.write("\t\trender_object.utility.call_server_component(\"movement_manager\",\"all\",[[\"operation\",\"clear_modifier\"]]);\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\tcase \"相机定位管道猪\":\r\n");
      out.write("\t\trender_object.utility.call_server_component(\"camera_operation_component\",\"all\",\r\n");
      out.write("\t\t\t[[\"operation\",\"locate\"],[\"scale\",\"1.0\"],[\"component_name\",\"pig_component\"]]);\r\n");
      out.write("\t\tbreak;\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("select {color:rgb(0,0,255);background-color:rgb(192,192,0);border-radius:10px};\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body onload=\"body_onload();\"\tonresize=\"body_onresize(null);\"\tonunload=\"render_object.terminate();\">\r\n");
      out.write("\r\n");
      out.write("<div style=\"text-align:left\">\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("\t\r\n");
      out.write("\t<canvas id=\"my_canvas\" tabindex=\"0\"></canvas><br/>\r\n");
      out.write("\t<table style=\"font-size:20px;position:absolute;left:50px;top:10px;color:rgb(255,255,255)\"><tr>\r\n");
      out.write("\t\r\n");
      out.write("\t<td>鼠标功能<br/>\r\n");
      out.write("\t\r\n");
      out.write("\t<select  id=\"mouse_function\"\ttitle=\"设置鼠标功能\"\tonclick=\"switch_mouse_function('mouse_function');\">\t\t\r\n");
      out.write("\t\t\t<option>旋转视口</option>\r\n");
      out.write("\t\t\t<option>平移组件</option>\r\n");
      out.write("\t\t\t<optgroup label=\"标注尺寸\">\t\r\n");
      out.write("\t\t\t\t<option>标注尺寸</option>\r\n");
      out.write("\t\t\t\t<option>标注X方向</option>\r\n");
      out.write("\t\t\t\t<option>标注Y方向</option>\r\n");
      out.write("\t\t\t\t<option>标注Z方向</option>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<option>标注XY面</option>\r\n");
      out.write("\t\t\t\t<option>标注YZ面</option>\r\n");
      out.write("\t\t\t\t<option>标注ZX面</option>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</optgroup>\r\n");
      out.write("\t</select>\r\n");
      out.write("\t\r\n");
      out.write("\t</td><td>剖分操作<br/>\r\n");
      out.write("\t<select  id=\"component_clip_operation\" onchange=\"process_component_operation('component_clip_operation');\">\r\n");
      out.write("\t\t<option></option>\r\n");
      out.write("\t\t<option value=\"执行剖分\">执行剖分&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</option>\r\n");
      out.write("\t\t<option value=\"取消剖分\">取消剖分</option>\r\n");
      out.write("\t</select>\r\n");
      out.write("\t\r\n");
      out.write("\t</td><td>管道猪控制<br/>\r\n");
      out.write("\t<select  id=\"pipe_pig_control\" onchange=\"process_pipe_pig('pipe_pig_control');\">\r\n");
      out.write("\t\t<option></option>\r\n");
      out.write("\t\t<option>向前移动管道猪</option>\r\n");
      out.write("\t\t<option>暂停移动管道猪</option>\r\n");
      out.write("\t\t<option>相机定位管道猪</option>\r\n");
      out.write("\t</select>\r\n");
      out.write("\t\r\n");
      out.write("\t</td><td>显示内容<br/>\r\n");
      out.write("\t<select  id=\"terrain_content_control\" onchange=\"process_terrain_content_control('terrain_content_control');\">\r\n");
      out.write("\t\t<option></option>\r\n");
      out.write("\t\t<optgroup label=\"地形显示内容\">\r\n");
      out.write("\t\t\t<option>地形全部显示</option>\r\n");
      out.write("\t\t\t<option>地形仅显示左边</option>\r\n");
      out.write("\t\t\t<option>地形仅显示右边</option>\r\n");
      out.write("\t\t\t<option>地形全部隐藏</option>\r\n");
      out.write("\t\t</optgroup>\r\n");
      out.write("\t\t<optgroup label=\"管道显示内容\">\r\n");
      out.write("\t\t\t<option>管道全部显示</option>\r\n");
      out.write("\t\t\t<option>管道仅显示左边</option>\r\n");
      out.write("\t\t\t<option>管道仅显示右边</option>\r\n");
      out.write("\t\t\t<option>管道全部隐藏</option>\r\n");
      out.write("\t\t</optgroup>\r\n");
      out.write("\t</select>\r\n");
      out.write("\t\r\n");
      out.write("\t</td><td>显示方式<br/>\r\n");
      out.write("\t<select  id=\"show_method\"\tonclick=\"switch_show_method('ground_component');\">\r\n");
      out.write("\t\t<option></option>\r\n");
      out.write("\t\t<option>仅仅显示表面</option>\r\n");
      out.write("\t\t<option>仅仅显示线框</option>\r\n");
      out.write("\t\t<option>显示表面及线框</option>\r\n");
      out.write("\t</select>\r\n");
      out.write("\r\n");
      out.write("\t</td><td>\r\n");
      out.write("\t<output id=\"pipe_radius_output\"\t\r\n");
      out.write("\t\tondblclick=\"reset_pipe_radius('pipe_radius_range','pipe_radius_output');\">管道半径</output><br/>\r\n");
      out.write("\t<input type=\"range\"  \tid=\"pipe_radius_range\" \tmin=\"0\" max=\"1000\"\tstyle=\"width:200px\"\r\n");
      out.write("\t \tonchange=\"adjust_pipe_radius('pipe_radius_range','pipe_radius_output');\"\r\n");
      out.write("\t \tondblclick=\"reset_pipe_radius('pipe_radius_range','pipe_radius_output');\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</td><td>\r\n");
      out.write("\t<output id=\"terrain_height_output\" \r\n");
      out.write("\t\tondblclick=\"reset_terrain_height('terrain_height_range','terrain_height_output');\">地形高度</output><br/>\r\n");
      out.write("\t<input type=\"range\"  \tid=\"terrain_height_range\" \tmin=\"0\" max=\"1000\"\tstyle=\"width:200px\"\r\n");
      out.write("\t \tonchange=\"adjust_terrain_height('terrain_height_range','terrain_height_output');\"\r\n");
      out.write("\t \tondblclick=\"reset_terrain_height('terrain_height_range','terrain_height_output');\">\r\n");
      out.write("\t \t\r\n");
      out.write("\t\r\n");
      out.write("\t</td><td>\r\n");
      out.write("\t<output id=\"contour_display_output\">等高线</output><br/>\r\n");
      out.write("\t<input type=\"range\" id=\"contour_display_scale\" \tmin=\"0\" max=\"1000\"\tstyle=\"width:200px\"\r\n");
      out.write("\t \tonchange=\"contour_display_scale_input();\"> \t\r\n");
      out.write("\t \t\r\n");
      out.write("\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

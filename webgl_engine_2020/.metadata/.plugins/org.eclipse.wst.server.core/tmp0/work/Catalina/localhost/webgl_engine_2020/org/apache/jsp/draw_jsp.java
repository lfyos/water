/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.14
 * Generated at: 2022-05-26 11:46:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class draw_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta http-equiv=\"Pragma\" content=\"no-cache\">\r\n");
      out.write("\r\n");
      out.write("<title></title>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"./interface.jsp?function_name=construct_render_object\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("var lfy_render;\r\n");

{
	String str;
	out.print  ("var user_name=\""		+(((str=request.getParameter("user_name"		 ))==null)?"NoName"		:str)+"\",");
	out.print  ("pass_word=\""			+(((str=request.getParameter("pass_word"		 ))==null)?"NoPassword"	:str)+"\",");
	out.print  ("language=\""			+(((str=request.getParameter("language"			 ))==null)?"chinese"	:str)+"\",");
	out.print  ("scene_name=\""			+(((str=request.getParameter("scene_name"		 ))==null)?""			:str)+"\",");
	out.println("link_name=\""			+(((str=request.getParameter("link_name"		 ))==null)?""			:str)+"\";");
	out.print  ("var change_part=\""	+(((str=request.getParameter("change_part"		 ))==null)?""			:str)+"\",");
	out.print  ("change_component=\""	+(((str=request.getParameter("change_component"	 ))==null)?""			:str)+"\",");
	out.print  ("part_type=\""			+(((str=request.getParameter("part_type"		 ))==null)?""			:str)+"\",");
	out.print  ("sub_directory=\""		+(((str=request.getParameter("sub_directory"	 ))==null)?""			:str)+"\",");
	out.print  ("coordinate=\""			+(((str=request.getParameter("coordinate"		 ))==null)?"xyz"		:str)+"\",");
	out.print  ("max_loading_number=\""	+(((str=request.getParameter("max_loading_number"))==null)?"10"			:str)+"\";");
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("function body_onload()\r\n");
      out.write("{\r\n");
      out.write("\tconstruct_render_object(\"my_canvas\",user_name,pass_word,language,scene_name,link_name,\r\n");
      out.write("\t\t\t//1.Object类型的绘图画布。如果是String类型,则系统使用document.getElementById(\"my_canvas\")将其转换为Object类型数据。\r\n");
      out.write("\t\t\t//2.用户名\t3.用户密码\t4.语言\t5.场景名称\t6.连接名称,用于多人协同操作一个场景\r\n");
      out.write("\t\t[\t//7.初始化参数\r\n");
      out.write("\t\t\t[\"change_part\",\t\t\t\tchange_part\t\t\t],\t//part换名\r\n");
      out.write("\t\t\t[\"change_component\",\t\tchange_component\t],\t//component换名\r\n");
      out.write("\t\t\t[\"part_type\",\t\t\t\tpart_type\t\t\t],\t//part类型\r\n");
      out.write("\t\t\t[\"max_loading_number\",\t\tmax_loading_number\t],\t//同时下载数量\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t[\"sub_directory\",\t\t\tsub_directory\t\t],\t//显示内容\r\n");
      out.write("\t\t\t[\"coordinate\",\t\t\t\tcoordinate\t\t\t]\t//坐标系选择\r\n");
      out.write("\t\t],\r\n");
      out.write("\t\tfunction(my_render)\t//8.创建场景成功后执行的函数\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tlfy_render=my_render;\t\t\t\t//把场景变量保存到变量render中\r\n");
      out.write("\t\t\tdocument.title=lfy_render.title;\t//设置网页标题\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tfunction(\t\t\t//9.进度条绘制函数，如果不配置该函数，则使用系统内部提供的默认进度条绘制函数\r\n");
      out.write("\t\t\t\tprocess_bar_canvas,\t\t\t\t//绘制进度条的画布canvas\r\n");
      out.write("\t\t\t\tprogress_bar_ctx,\t\t\t\t//绘制进度条的2D上下文\r\n");
      out.write("\t\t\t\tprocess_bar_caption,\t\t\t//进度条当前进度标题，该标题和语言有关，目前系统中仅仅配置了中文和英文相关标题\r\n");
      out.write("\t\t\t\tprogress_bar_value,\t\t\t\t//进度条当前进度，取值范围0.00~1.00\r\n");
      out.write("\t\t\t\tprocess_bar_time_length,\t\t//进度条当前进度经过的时间，单位是毫秒\r\n");
      out.write("\t\t\t\tprocess_bar_engine_time_length,\t//进度条所有进度经过的时间，单位是毫秒\r\n");
      out.write("\t\t\t\ttime_unit)\t\t\t\t\t\t//和语言有关时间单位标题，比如中文是秒，英文是second\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tvar p_separator=Math.round(process_bar_canvas.width*progress_bar_value);\r\n");
      out.write("\t\t\tprogress_bar_ctx.fillStyle=\"rgb(127,127,127)\";\r\n");
      out.write("\t\t\tprogress_bar_ctx.fillRect(0,\t\t\t0,\tp_separator,\t\t\t\tprocess_bar_canvas.height);\r\n");
      out.write("\t\t\tprogress_bar_ctx.fillStyle=\"rgb(255,255,255)\";\r\n");
      out.write("\t\t\tprogress_bar_ctx.fillRect(p_separator,\t0,\tprocess_bar_canvas.width,\tprocess_bar_canvas.height);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif((progress_bar_value=(Math.round(1000.0*progress_bar_value)/10.0).toString()).indexOf(\".\")<0)\r\n");
      out.write("\t\t\t\tprogress_bar_value+=\".0\";\r\n");
      out.write("\t\t\tvar display_value=process_bar_caption+\":\"+progress_bar_value+\"%,\";\r\n");
      out.write("\t\t\tdisplay_value+=(Math.round(process_bar_time_length/1000.0)).toString()+time_unit+\",\";\r\n");
      out.write("\t\t\tdisplay_value+=(Math.round(process_bar_engine_time_length/1000.0)).toString()+time_unit;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tprogress_bar_ctx.font\t\t\t=\"bold 48px Arial\";\r\n");
      out.write("\t\t\tprogress_bar_ctx.textBaseline\t=\"middle\";\r\n");
      out.write("\t\t\tprogress_bar_ctx.fillStyle\t\t=\"rgb(192,192,192)\";\r\n");
      out.write("\t\t\tprogress_bar_ctx.textAlign\t\t=\"center\";\t\t\r\n");
      out.write("\t\t\tprogress_bar_ctx.fillText(display_value,\tprocess_bar_canvas.width*0.5,\tprocess_bar_canvas.height*0.5);\r\n");
      out.write("\t\t});\r\n");
      out.write("}\r\n");
      out.write("function body_onresize()\r\n");
      out.write("{\r\n");
      out.write("\tvar canvas_object=document.getElementById(\"my_canvas\");\r\n");
      out.write("\tcanvas_object.width\t=window.innerWidth *0.975;\r\n");
      out.write("\tcanvas_object.height=window.innerHeight*0.925;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body onload=\"body_onresize();body_onload();\" onresize=\"body_onresize();\">\r\n");
      out.write("\r\n");
      out.write("<div align=\"center\">\r\n");
      out.write("<canvas id=\"my_canvas\"\t\ttabindex=\"0\"\t></canvas>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

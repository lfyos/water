uniform material_information
{
	float render_method,parameter_0,parameter_1,parameter_2,parameter_3;
	float ambient,diffuse,specular,shininess,transparency,emission;
	float texture_move_x,texture_move_y,texture_scale_cos,texture_scale_sin;
	
	float clip_mode;
}material_info;

uniform int draw_flag;

uniform sampler2D texture_sampler;

in	vec4  frag_location,	frag_normal,	frag_material,		frag_id,	frag_texture;
in  float frag_unit,		frag_value;

in	vec4  frag_color,		frag_clip_world_location;

layout (location = 0) out vec4 frag_data[4];

void main(void)
{
	if(round(frag_id.w)==2.0)
		if(distance(gl_PointCoord,vec2(0.5,0.5))>0.5){
			discard;
			return;
		}
	if((draw_flag&12)==4){
		if(dot(target_info.clip_plane,frag_clip_world_location)>0.0){
			discard;
			return;
		}
	}else if((draw_flag&12)==8){
		if(dot(target_info.clip_plane,frag_clip_world_location)<0.0){
			discard;
			return;
		}
	}
	
	if(frag_color.w<0.5){
		discard;
		return;
	}
	int primitive_type=int(round(frag_id.w));
	int render_method=int(round(material_info.render_method));
	vec4 texture_color=texture(texture_sampler,vec2(
			material_info.texture_move_x
				+( frag_texture.x)*(material_info.texture_scale_cos)
				+(frag_texture.y)*(material_info.texture_scale_sin),
			material_info.texture_move_y
				+(-frag_texture.x)*(material_info.texture_scale_sin)
				+(frag_texture.y)*(material_info.texture_scale_cos)));

	if(primitive_type==0){			//if face fragment
		if(render_method==3){		//if do discard by texture alf value
			if(texture_color.w<material_info.parameter_0){
				discard;
				return;
			}
		}
	}
	
	if(pass_info.method_id==1){	
		int primitive_type=int(round(frag_id.w));
		
		if(pass_info.pass_id==0){
			frag_data[0]=code_integer(component_info.component_id);
			frag_data[1]=code_integer(int(round(frag_id.x)));
			frag_data[2]=code_integer(int(round(frag_id.y)));
			frag_data[3]=code_integer(int(round(frag_id.z)));
		}else{
			frag_data[0]=code_integer((primitive_type==0)?-1:int(round(frag_texture.x)));
			frag_data[1]=code_integer((primitive_type==0)?-1:int(round(frag_texture.y)));
			frag_data[2]=code_float(gl_FragCoord.z*2.0-1.0);
			frag_data[3]=code_float(0.0);
		}
		return;	
	}

	switch (render_method){
	case 2:
	case 3:
		if((primitive_type==0)&&((draw_flag&2)==0)){
			frag_data[0]=vec4(texture_color.rgb,1.0);
			break;
		}
	default:
		frag_data[0]=vec4(frag_color.rgb,1.0);
		break;
	}
	
	if(pass_info.method_id==5){
		if((frag_data[0].w=1.0-material_info.transparency)<0.0)
			frag_data[0].w=0.0;
		if(frag_data[0].w>1.0)
			frag_data[0].w=1.0;
	}
}
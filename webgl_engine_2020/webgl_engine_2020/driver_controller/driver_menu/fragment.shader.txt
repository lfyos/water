uniform mat4 par;
uniform sampler2D texture_sampler;

in vec4 frag_texture;

layout (location = 0) out vec4 frag_data[4];

void main(void)
{
	frag_data[0]=texture(texture_sampler,frag_texture.xy);
	if(frag_data[0].w<0.5){
		discard;
		return;
	}
	gl_FragDepth=-0.9999;
	if(pass_info.method_id!=1){
		if(system_info.millisecond<500){
			vec4 hightlight=par[2];
			if(frag_texture.x>hightlight.x)
				if(frag_texture.x<hightlight.z)
					if(frag_texture.y>hightlight.y)
						if(frag_texture.y<hightlight.w)
								discard;
		}
		return;
	}	
	if(pass_info.pass_id==0){
		frag_data[0]=code_integer(component_info.component_id);	//component_id
		frag_data[1]=frag_data[0];								//body_id
		frag_data[2]=frag_data[0];								//face_id
		frag_data[3]=frag_data[0];								//vertex_id
	}else{
		frag_data[0]=code_integer(component_info.component_id);	//loop_id
		frag_data[1]=frag_data[0];								//edge_id
		frag_data[2]=code_float(2.0*(gl_FragCoord.z-0.5));		//depth
		frag_data[3]=code_float(0.0);						//value
	}
}